# **Моделирование нефтегазовой добычи**  

## **Описание**  
Веб-приложение для симуляции процессов нефтегазодобычи с:  
- **Динамическим расчетом** добычи нефти и газа  
- **Моделированием пластового давления**  
- **Визуализацией данных** через интерактивные графики  
- Веб-интерфейсом на **Flask**  

## **Возможности**  
✅ Создание виртуальных месторождений с настраиваемыми параметрами  
✅ Добавление скважин с индивидуальными характеристиками  
✅ Расчет добычи за произвольный период времени  
✅ Разовые операции добычи с мгновенным эффектом  
✅ Графики динамики давления и объемов добычи  

---

## **Установка**  
1. **Требования**:  
   - Python 3.7+  
   - Flask (`pip install flask`)  
   - Chart.js (подключается автоматически через CDN)  

2. **Запуск**:  
   ```bash
   # Клонируйте репозиторий (если нужно)
   git clone https://github.com/ваш-репозиторий/oil-simulator.git
   cd oil-simulator

   # Запустите приложение
   python app.py
Сервер будет доступен по адресу: http://localhost:5000

Использование
Через веб-интерфейс
Откройте http://localhost:5000

Во вкладке "Создание":

Задайте параметры месторождения (название, давление, запасы)

Добавьте скважину (название, производительность)

Во вкладке "Операции":

Просматривайте текущий статус

Запускайте расчет добычи за N дней

Выполняйте разовые операции добычи

Во вкладке "Статистика":

Анализируйте графики изменения давления и добычи

Через API
Получение статуса месторождения:

bash
curl -X GET http://localhost:5000/api/reservoir_status
Запуск расчета добычи:

bash
curl -X POST http://localhost:5000/api/calculate_production \
  -H "Content-Type: application/json" \
  -d '{"days": 30}'
Структура проекта
text
oil-simulator/
├── app.py              # Основной серверный код (Flask)
├── templates/
│   └── index.html      # Веб-интерфейс
└── static/
    └── styles.css      # Дополнительные стили (опционально)
Настройка
Изменение формул расчета:
Отредактируйте методы produce() и calculate_production() в классах Reservoir и Well.

Настройка графиков:
Измените параметры в initializeCharts() (файл index.html).

Пример работы
Параметры месторождения:

Название: "Уральское"

Давление: 250 атм

Нефть: 5,000,000 тонн

Газ: 3,000,000,000 м³

Результат за 30 дней:

Добыто нефти: 14,382 тонны

Давление упало до: 218 атм

Разработчикам
Алгоритмы:

Расчет давления: ΔP = (добыча/остаток) × давление × 0.1

Рекурсивный расчет добычи по дням

Расширение:

python
# Добавьте новые параметры в класс Reservoir:
def __init__(self, ...):
    self.water_cut = 0.15  # Пример добавления обводненности
Лицензия
MIT License. Свободное использование и модификация.

Автор: Kirill
Версия: 1.0
Дата: 2025